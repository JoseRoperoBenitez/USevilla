vector2
vector2=rep(3,100)
tabla=cbind(colorojos, altura, peso)
x=5
x<-5
x+4
#Asignaciones de variables
vector1=c(2,3,1,6,9)
vector2=rep(3,100)
vector2
vector3=1:80
matriz1=matrix(vector2,nrow=20)
matriz2=matrix(vector3,nrow=4,byrow=FALSE)
matriz22=matrix(vector3,nrow=4,byrow=TRUE)
#20 verdes, 30 negros, 10 azules, 5 marrones
colorojos=c(rep("verdes",20), rep("negros",30), rep("azules", 10), rep("marrones",5))
#Altura de estas 65 personas sigue una normal de media 1,65 y varianza 0,2
altura=rnorm(65, mean=1.65,sd=sqrt(0.2))
peso=rnorm(65, mean=62,sd=1)
tabla=cbind(colorojos, altura, peso)
altura=rnorm(65, mean=1.65,sd=sqrt(0.2))
colorojos=c(rep("verdes",20), rep("negros",30), rep("azules", 10), rep("marrones",5))
View(matriz1)
View(tabla)
View(tabla)
tabla1=data.frame(altura, peso, colorojos)
View(tabla1)
summary(tabla)
sumary(tabla1)
summary(tabla1)
range(altura)
mean(altura)
tablafrecuenciascolorojos<- table(colorojos)
frecuenciasabsolutas_colorojos<- table(colorojos)
frecuenciasabsolutasACU_colorojos<-cumsum(frecuenciasabsolutas_colorojos)
frecuenciasabsolutasACU_colorojos
frecuenciasrelativas_colorojos<-table(colorojos)/length(colorojos)
frecuenciasrelativas_colorojos
frecuenciasrelativasACU_colorojos<- cumsum(frecuenciasrelativas_colorojos)
tablafrecuencias_colorojos <- cbin (frecuenciasabsolutas_colorojos,
frecuenciasabsolutasACU_colorojos,
frecuenciasrelativas_colorojos,
frecuenciasrelativasACU_colorojos)
tablafrecuencias_colorojos <- cbind (frecuenciasabsolutas_colorojos,
frecuenciasabsolutasACU_colorojos,
frecuenciasrelativas_colorojos,
frecuenciasrelativasACU_colorojos)
colnames(tablafrecuencias_colorojos)<-c("ni", "Ni", "fi", "Fi")
range (altura)
alturaenintervalos<-cut(altura, breaks=seq(0.55, 2,2, by= 0.05))
alturaenintervalos<-cut(altura, breaks=seq(0.55, 2.5, by= 0.05))
seq(0.55, 2.5, by= 0.05)
alturaenintervalos<-cut(altura, breaks=seq(0.55, 2.5, by= 0.05))
alturaenintervalos
frecuenciasabs_altura<-table(alturaenintervalos)
frecuenciasabs_altura
pie(colorojos)
colorojos[colorojos=="verdes"]<- 1
pie(as.numeric(colorojos))
colorojos[colorojos=="verdes"]<- 1
colorojos[colorojos=="marrones"]<-2
colorojos[colorojos=="negros"]<-3
colorojos[colorojos=="azules"]<-4
pie(as.numeric(colorojos))
pie(table(colorojos))
colorojos=c(rep("verdes",20), rep("negros",30), rep("azules", 10), rep("marrones",5))
pie(table(colorojos))
plot(table(colorojos))
plot(table(colorojos), col=c("red","yellow","blue","green"))
plot(table(colorojos),
type="l",
col=c("red"))
hist(altura)
hist(altura, col="green")
hist(altura, col="green", main="Histograma Altura")
hist(altura, col="green", main="Histograma Altura", ylabel ="Frecuencia",
xlabel = "Altura cms")
hist(altura, col="green", main="Histograma Altura", ylab =  ="Frecuencia",
hist(altura, col="green", main="Histograma Altura", ylab=  ="Frecuencia",
hist(altura, col="green", main="Histograma Altura", ylab=  ="Frecuencia"
hist(altura, col="green", main="Histograma Altura", ylab= "Frecuencia",
xlab= "Altura cms")
hist(altura, col="green", main="Histograma Altura", ylab= "Frecuencia",
xlab= "Altura cms",breaks=8)
hist(altura, col="green", main="Histograma Altura", ylab= "Frecuencia",
xlab= "Altura cms",breaks=5)
boxplot(altura)
n=10
alpha=0.05
media=7.08
landa=[0,alpha]
landa= 0:alpha
landa = pchisq(a)
landa = pchisq(x)
x=replicate(0,10)
landa = pchisq(x)
landa = pchisq(x,df=2*n)
landa = pchisq(x,df=20)
landa = pchisq(x,df=20)
landa = pchisq(c(x),df=20)
x=c(replicate(0,10))
landa = pchisq(c(x),df=20)
landa = pchisq(x,df=20)
landa = pchisq(x,df=20)
landa = pchisq(x),df=20
landa = pchisq(x)df=20
landa = pchisq((x),df=20)
landa = pchisq(x,df=20)
a=c(replicate(0,10))
landa = pchisq(a,df=20)
q()
nrow(installed.packages())
install.packages("rio")
proceso_A = c(1.8, 1.2, 1.6, 1.7, 1.1, 1.0)
shapiro.test(proceso_A)
proceso_A = c(1.8, 1.2, 1.6, 1.7, 1.1, 1.0)
shapiro.test(proceso_A)
proceso_A = c(1.8, 1.2, 1.6, 1.7, 1.1, 1.0)
shapiro.test(proceso_A)
mean (proceso_A)
var(proceso_A)
# R tiene otras funciones que nos permiten realizar cálculos
sum(proceso_A)
length(proceso_A)
media=sum/length
# R tiene otras funciones que nos permiten realizar cálculos
suma=sum(proceso_A)
longitud=length(proceso_A)
media=sum/length
media=suma/longitud
suma/longitud
## Apartado c)
(mean(proceso_A) - 1.5) / (sd(proceso_A) / sqrt(6))
qt(0.975, 5)
2*pt(-0.719195, 5) #usamos la simetría de la t de Student
mean(proceso_A) + qt(0.025, 5) * sd(proceso_A)/sqrt(6)
mean(proceso_A) + qt(0.975, 5) * sd(proceso_A)/sqrt(6)
t.test(proceso_A, mu = 1.5)
# Directamente se puede ver:
t.test(proceso_A, mu = 1.5)
t.test(proceso_A, mu = 1.5, alternative = "less")
t.test(proceso_A, mu = 1.5, alternative = "less") #less pq nos pregunta si es menor
install.packages('tinytex')
tinytex::install_tinytex()
source("~/.active-rstudio-document")
source("C:/Users/jrope/Escritorio/Mates/MLDE/Practicas_R/Apuntespdf.R", echo=TRUE)
source("C:/Users/jrope/Escritorio/Mates/MLDE/Practicas_R/Apuntespdf.R", echo=TRUE)
source("C:/Users/jrope/Escritorio/Mates/MLDE/Practicas_R/Apuntespdf.R", echo=TRUE)
#date: "Curso 2022/2023 - Universidad de Sevilla"
format: "pdf"
source("C:/Users/jrope/Escritorio/Mates/MLDE/Practicas_R/Apuntespdf.R")
setwd("~/relacion01mlde")
prost <- read.csv("~/relacion01mlde/prostate.txt", sep="")
View(prost)
prost <- read.csv("~/relacion01mlde/prostate.txt", sep="")
prost <- read.csv("~/relacion01mlde/prostate.txt", sep="")
prost <- read.csv("prostate.txt", sep="")
View(prost)
prost <- read.csv("datos/prostate.txt", sep="")
class(prost)
prost$svi = as.factor(prost$svi) #analogo al factor
sumary(prost)
summary(prost)
summary(prost)  #no esta bien hacer el summary directamente pq hay que tner en cuenta los tipos
prost$lcavol[6]
prost$lcavol[c(3,5)] #accedo a las coordenadas 3 y 5
prost$lcavol[1:20]
pr1
pr1 = prost$lcavol[c(30:57,1,7,10:15)]
pr1
lcavol#ya no da error
attach(prost) #Consejo: hacerlo después de modificar los datos
lcavol#ya no da error
#Para hacer tabla de frecuencias
table(age)
min(age)
min(prost$age)
median(age)
quantile(age,c(0.25,0.5,0.75))
var(age) #cuasivarianza
sd(age) #desviacion tipica
max(age)
#Podemos crear intervalos con respecto a los datos
(intervalos = cut(age, breaks = seq(40,80,10)))
age
(FrecAbs = table(intervalos))
(FrecRel = prop.table(FrecAbs))
(AbsAcum = cumsum(FrecAbs))
(RelAcum = cumsum(FrecRel))
(tabla = cbind(FrecAbs, FrecRel, AbsAcum, RelAcum))
hist(age, breaks = seq(40,80,10))#representa la frecuencia absoluta
hist(prost$age, breaks = 4)
hist(age, breaks = c(40,50,70,80))#representa la densidad de frec. relativa
#Grafico de caja y bigotes
boxplot(prost$age)
boxplot(prost$age,horizontal = T)
#install.packages("fBasics")
library(fBasics)
skewness(age) #Coeficiente de asimetría
kurtosis(age) #Coeficiente de curtosis
plot(lcavol,lpsa)
plot(prost[-c(5,6)])
cor(lcavol, lpsa)
round( cor(  prost[-5]  ) ,3  ) #round (-,3) nos devuele 3 decimales
cor(  prost[-5]  ) #vemos todos quitando el svi que es un factor.
round( cor(  prost[-5]  ) ,3  ) #round (-,3) nos devuele 3 decimales
heatmap(abs(cor(prost[-5])), scale = "none")
# 3.3 ----
qqnorm(lpsa)
qqline(lpsa, col = "red")
shapiro.test(lpsa)
shapiro.test(lpsa)
qqline(pgg45,col = "red")
shapiro.test(pgg45)
# 3.3 ----
qqnorm(lpsa)
qqline(lpsa, col = "red")
shapiro.test(lpsa)
qqnorm(pgg45)
qqline(pgg45,col = "red")
shapiro.test(pgg45)
